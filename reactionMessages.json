{
  "name": "R√©action Message",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "af83fe42-72ee-4617-9e0b-24a9700173e8",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -112,
        0
      ],
      "id": "f381cb17-0ddf-49f6-8fc5-9e447208fa08",
      "name": "Webhook",
      "webhookId": "af83fe42-72ee-4617-9e0b-24a9700173e8"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.emoji }}",
                    "rightValue": "üëç",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5d3194d8-20fd-4225-bee7-382b85964d32"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fdd79cd3-d4f0-4e53-929c-26359cdc87c7",
                    "leftValue": "={{ $json.body.emoji }}",
                    "rightValue": "üëé",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c3979780-fcfd-4c0a-b888-5c27e439abe8",
                    "leftValue": "={{ $json.body.emoji }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        288,
        -16
      ],
      "id": "fb47fb47-6fba-4b6a-be81-eb320b101eba",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const body = item.json.body;\n\n  let message = \"Bien entendu, je m'occupe du suivi du s√©minaire suivant :  \\n\\n\";\n  message += `‚úÖ ${body.id} - ${body.sujet} - ${body.email} - ${body.date}\\n\\n`;\n\n  // Ajouter le message g√©n√©r√© dans le JSON existant\n  item.json.body.responseMessage = message;\n\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        -208
      ],
      "id": "21b515c1-c6e9-4534-b225-9b181e6ce6ad",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const body = item.json.body;\n\n  let message = \"Je ne comprends pas ce que vous souhaitiez que je fasse avec le mail suivant :  \\n\\n\";\n  message += `${body.id} - ${body.sujet} - ${body.email} - ${body.date}`;\n\n  // Ajouter le message g√©n√©r√© dans le JSON existant\n  item.json.body.responseMessage = message;\n\n  return item;\n});\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        576,
        176
      ],
      "id": "72910a6d-167d-4640-be75-e3fdcb182696",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const body = item.json.body;\n\n  let message = \"Bien entendu, je ne m'occupe pas du suivi du s√©minaire suivant :  \\n\\n\";\n  message += `‚ùå ${body.id} - ${body.sujet} - ${body.email} - ${body.date}\\n\\n`;\n\n  // Ajouter le message g√©n√©r√© dans le JSON existant\n  item.json.body.responseMessage = message;\n\n  return item;\n});\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        -16
      ],
      "id": "1eadb750-760a-4540-aba3-b13b9cadf904",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const message = item.json.body.messageContent || \"\";\n\n  // Expression r√©guli√®re pour extraire les 4 infos\n  const regex = /‚Ä¢\\s*\\*{2}([^\\*]+)\\*{2}\\s*-\\s*(.*?)\\s*-\\s*([\\w.-]+@[\\w.-]+)\\s*-\\s*(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z)/;\n\n  const match = message.match(regex);\n\n  if (match) {\n    const [, id, sujet, email, date] = match;\n\n    // Ajouter les infos extraites au JSON body\n    item.json.body.id = id.trim();\n    item.json.body.sujet = sujet.trim();\n    item.json.body.email = email.trim();\n    item.json.body.date = date.trim();\n  } else {\n    item.json.body.parsingError = \"Impossible d'extraire les informations depuis le messageContent.\";\n  }\n\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        96,
        0
      ],
      "id": "2d5949bd-4aca-4025-81d4-3d2c16b3dca8",
      "name": "Code3"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "deleteMessage",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "messageId": "={{ $json.body.messageId }}"
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        992,
        -208
      ],
      "id": "1aacdce0-9091-4824-9c3d-b2d71d52c50e",
      "name": "Delete a message",
      "webhookId": "f3b36e7d-c426-4282-8dc5-e89b2f741c7e",
      "alwaysOutputData": false,
      "credentials": {
        "discordBotApi": {
          "id": "yCxm3qh1t4kLKxVj",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "content": "={{ $json.body.responseMessage }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        992,
        16
      ],
      "id": "705f61d2-4f88-4230-9295-08f93cd61486",
      "name": "Send a message",
      "webhookId": "7424ff02-b4d6-48dd-95ba-537c7e22ff75",
      "credentials": {
        "discordBotApi": {
          "id": "yCxm3qh1t4kLKxVj",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const existingMails = items[0].json.data; // data est d√©j√† un tableau de mails\n\nconst mailsFromFile = existingMails.map(mail => ({ json: mail }));\n\nreturn mailsFromFile;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        -416
      ],
      "id": "639c22b9-6fbc-42c6-aff4-105edde911b4",
      "name": "Code4"
    },
    {
      "parameters": {
        "fileSelector": "/home/sid2019-6/Documents/Sujet_Etude_M1/mails.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        128,
        -352
      ],
      "id": "a05b311d-abd9-454a-b2f0-4925902f3000",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        304,
        -416
      ],
      "id": "8ff36d48-d9db-43e0-aeb6-777885c13d4f",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "jsCode": "// Trouver l'objet venant du Webhook (qui contient \"body\")\nconst webhookItem = items.find(item => item.json.body && item.json.body.id);\nconst webhookId = webhookItem?.json.body.id;\n\n// Trouver l'email avec le m√™me ID\nconst emailItem = items.find(item => item.json.id === webhookId);\n\n// V√©rification de pr√©sence\nif (emailItem && webhookItem) {\n  return [\n    {\n      json: {\n        ...emailItem.json,              // Contenu de l'email\n        webhookData: webhookItem.json.body // Infos du webhook ajout√©es √† la fin\n      }\n    }\n  ];\n} else {\n  return [\n    {\n      json: {\n        error: \"Email non trouv√© pour l‚ÄôID du webhook\",\n        webhookId\n      }\n    }\n  ];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1104,
        -416
      ],
      "id": "494b9ad8-d570-457a-927c-1b8bca14dafe",
      "name": "Code5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        880,
        -416
      ],
      "id": "e61c514d-7e67-4955-a1f6-2ead81b10e4d",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const data = items[0].json;\n\n\nconst conv_text = `---\\nID: ${data.id}\\nFrom: ${data.from.adress}\\nFolder: ${data.folder}\\nDate: ${data.date}\\nMessage:\\n${data.body.text}\\n\\n`;\n\nconst conv_html = `<hr><p><strong>ID:</strong> ${data.id}<br><strong>From:</strong> ${data.from.adress}<br><strong>Folder:</strong> ${data.folder}<br><strong>Date:</strong> ${data.date}</p>${data.body.html}`;\n\nreturn {\n  json: {\n    threadId: data.threadId || \"\",\n    who1 : {\n      adress : data.from.adress || \"\"\n    },\n    who2 : {\n      adress : data.to.adress || \"\"\n    },\n    subject: data.subject || \"\",\n    date_first: data.date || \"\",\n    date_last: new Date().toDateString(),\n    cc: data.cc || \"\",\n    bcc: data.bcc || \"\",\n    attachments: data.attachments || \"\",\n    conv : {\n      text : conv_text,\n      html : conv_html\n    },\n    workflow_status: {\n      current_step : \"invitation_envoy√©e (1)\",\n      updated_by: \"manually\",\n      updated_at: new Date().toDateString(),\n      comments: \"\",\n      help: {\n      \tind: \"0\",\n      \tmessage: \"\",\n      \tresponse: \"\",\n      },\n    },\n    action: {\n      next_action: [\"\"],\n      commentaires_ia: \"\"\n     },\n    webhook: {\n      user: data.webhookData.username,\n      date: new Date().toDateString()\n    },\n    relance: \"non\"\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1312,
        -416
      ],
      "id": "426b0272-9af3-4607-b14e-d481b6d2246d",
      "name": "Code6"
    },
    {
      "parameters": {
        "fileSelector": "/home/sid2019-6/Documents/Sujet_Etude_M1/suivi_mails.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        128,
        -624
      ],
      "id": "a493c5dc-3351-4ffd-8b3b-08a0ef9a4e2a",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        576,
        -656
      ],
      "id": "966e8561-4a8c-45e4-8108-66355cf4646d",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "jsCode": "const existingMails = items[0].json.data; // data est d√©j√† un tableau de mails\n\nconst mailsFromFile = existingMails.map(mail => ({ json: mail }));\n\nreturn mailsFromFile;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        912,
        -672
      ],
      "id": "1f46d51a-7ba9-4b60-9fc5-966be977025c",
      "name": "Code7"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1456,
        -704
      ],
      "id": "f8c49b0e-6433-4c9f-bcf5-2bca74697219",
      "name": "Merge1"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1776,
        -704
      ],
      "id": "704d4c3a-b8a1-4505-926d-665028844b13",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "/home/sid2019-6/Documents/Sujet_Etude_M1/suivi_mails.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1984,
        -704
      ],
      "id": "2673541b-cf3a-490a-9227-2f852ff00a0d",
      "name": "Read/Write Files from Disk2"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Delete a message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Delete a message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e5a52bde-a669-4b4e-9350-e399e7e0c2ea",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "129202ca1ffe12ace482ef4f1e073c3fc6d4bd3dcec29e94333d4dc89740c937"
  },
  "id": "R4KcrZzj1CEYu9xx",
  "tags": []
}